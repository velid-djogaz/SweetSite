{"version":3,"sources":["cartSummary.js"],"names":["updateCartSummary","cart","getCart","totalItems","totalPrice","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","item","quantity","price","err","cartQuantityElement","document","getElementById","textContent","toFixed","addToCart","productName","existingItem","find","name","push","cartTotalElement","saveCart","removeFromCart","index","findIndex","splice","window","addEventListener"],"mappings":"aACA,SAASA,oBADT,IAAAC,EAAAC,UAIIC,EAAA,EAEIC,EAAa,EALQC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAKzB,IAAA,IAAAC,EAAAC,EAAAT,EAAAU,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAA,CAAA,IAAID,EAAJK,EAAAM,MALyBZ,GAAAa,EAAAC,SAAAb,GAAAY,EAAAC,SAAAD,EAAAE,OAAA,MAAAC,GAAAb,GAAA,EAAAC,EAAAY,EAAA,QAAA,IAAAd,GAAA,MAAAK,EAAA,QAAAA,EAAA,SAAA,QAAA,GAAAJ,EAAA,MAAAC,GAOzB,IAAAa,EAAAC,SAAAC,eAAA,iBAAWN,EAAcK,SAAAC,eAAA,cASzBF,EAAoBG,YAAcpB,EAP9BC,EAAcY,YAAAZ,EAAdoB,QAAA,GATqB,SAAAC,UAAAC,EAAAR,GAAA,IAAAjB,EAAAC,UAAAyB,EAAA1B,EAAA2B,KAAA,SAAAZ,GAAA,OAAAA,EAAAa,OAAAH,IAAAC,EAAAA,EAAAV,WAkCrBhB,EAAK6B,KAAK,CArBRV,KAAAA,EACAW,MAAAA,EAENX,SAAoBG,IAQxBS,SAAA/B,GACAD,oBAEmC,SAAAiC,eAAUP,GAAzC,IAAAzB,EAAAC,UAGIgC,EAAAjC,EAAAkC,UAAA,SAAAnB,GAAA,OAAAA,EAAAa,OAAAH,KAEG,IAHPQ,IAKQjC,EAAJmC,OAAUF,EAAA,GAGNjB,SAAUhB,GA0BdD,qBAjBPqC,OAEDC,iBAAA,mBAAA,WAqBItC","file":"cartSummary.min.js","sourcesContent":["// Function to update the cart summary\r\nfunction updateCartSummary() {\r\n    const cart = getCart(); // Get the cart items (you should have a function to get cart items)\r\n\r\n    // Calculate total items and total price\r\n    let totalItems = 0;\r\n    let totalPrice = 0;\r\n\r\n    for (const item of cart) {\r\n        totalItems += item.quantity; // Assuming each item in the cart has a 'quantity' property\r\n        totalPrice += item.quantity * item.price;\r\n    }\r\n\r\n    // Update the HTML elements in the cart summary\r\n    const cartQuantityElement = document.getElementById(\"cart-quantity\");\r\n    const cartTotalElement = document.getElementById(\"cart-total\");\r\n\r\n    cartQuantityElement.textContent = totalItems;\r\n    cartTotalElement.textContent = totalPrice.toFixed(2); // Format total price with two decimal places\r\n}\r\n\r\n// Call the updateCartSummary function whenever items are added or removed from the cart\r\n// You should have functions for adding/removing items from the cart\r\n// Call updateCartSummary() after those operations\r\n\r\n// Example of adding an item to the cart:\r\nfunction addToCart(productName, price) {\r\n    const cart = getCart(); // Get the cart items\r\n    const existingItem = cart.find((item) => item.name === productName);\r\n\r\n    if (existingItem) {\r\n        // If the product already exists in the cart, increment its quantity\r\n        existingItem.quantity++;\r\n    } else {\r\n        // If it's a new product, add it to the cart\r\n        cart.push({\r\n            name: productName,\r\n            price: price,\r\n            quantity: 1,\r\n        });\r\n    }\r\n\r\n    // Save the updated cart to local storage\r\n    saveCart(cart);\r\n\r\n    // Update the cart summary\r\n    updateCartSummary();\r\n}\r\n\r\n// Example of removing an item from the cart:\r\nfunction removeFromCart(productName) {\r\n    const cart = getCart(); // Get the cart items\r\n\r\n    // Find the index of the item to remove\r\n    const index = cart.findIndex((item) => item.name === productName);\r\n\r\n    if (index !== -1) {\r\n        // If the item exists in the cart, remove it\r\n        cart.splice(index, 1);\r\n\r\n        // Save the updated cart to local storage\r\n        saveCart(cart);\r\n\r\n        // Update the cart summary\r\n        updateCartSummary();\r\n    }\r\n}\r\n\r\n// Call updateCartSummary() when the page loads initially to show the correct summary\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n    updateCartSummary();\r\n});"]}