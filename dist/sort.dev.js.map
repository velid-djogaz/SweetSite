{"version":3,"sources":["sort.js"],"names":["document","addEventListener","sortSelect","getElementById","productSection","querySelector","selectedOption","value","sortProductsByPrice","resetDefaultView","ascending","products","Array","from","querySelectorAll","sort","a","b","priceA","parseFloat","textContent","replace","priceB","innerHTML","forEach","product","appendChild","indexA","parseInt","getAttribute","indexB"],"mappings":";;AAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAY;AACtD,MAAMC,UAAU,GAAGF,QAAQ,CAACG,cAAT,CAAwB,aAAxB,CAAnB;AACA,MAAMC,cAAc,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,kBAAvB,CAAvB,CAFsD,CAItD;;AACAH,EAAAA,UAAU,CAACD,gBAAX,CAA4B,QAA5B,EAAsC,YAAY;AAC9C,QAAMK,cAAc,GAAGJ,UAAU,CAACK,KAAlC;;AAEA,QAAID,cAAc,KAAK,aAAvB,EAAsC;AAClCE,MAAAA,mBAAmB,CAAC,IAAD,CAAnB,CADkC,CACP;AAC9B,KAFD,MAEO,IAAIF,cAAc,KAAK,aAAvB,EAAsC;AACzCE,MAAAA,mBAAmB,CAAC,KAAD,CAAnB,CADyC,CACb;AAC/B,KAFM,MAEA,IAAIF,cAAc,KAAK,SAAvB,EAAkC;AACrC;AACAG,MAAAA,gBAAgB;AACnB;AACJ,GAXD,EALsD,CAkBtD;;AACA,WAASD,mBAAT,CAA6BE,SAA7B,EAAwC;AACpC,QAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWT,cAAc,CAACU,gBAAf,CAAgC,UAAhC,CAAX,CAAjB;AACAH,IAAAA,QAAQ,CAACI,IAAT,CAAc,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACpB,UAAMC,MAAM,GAAGC,UAAU,CAACH,CAAC,CAACX,aAAF,CAAgB,QAAhB,EAA0Be,WAA1B,CAAsCC,OAAtC,CAA8C,GAA9C,EAAmD,EAAnD,CAAD,CAAzB;AACA,UAAMC,MAAM,GAAGH,UAAU,CAACF,CAAC,CAACZ,aAAF,CAAgB,QAAhB,EAA0Be,WAA1B,CAAsCC,OAAtC,CAA8C,GAA9C,EAAmD,EAAnD,CAAD,CAAzB;AACA,aAAOX,SAAS,GAAGQ,MAAM,GAAGI,MAAZ,GAAqBA,MAAM,GAAGJ,MAA9C;AACH,KAJD,EAFoC,CAQpC;;AACAd,IAAAA,cAAc,CAACmB,SAAf,GAA2B,EAA3B;AACAZ,IAAAA,QAAQ,CAACa,OAAT,CAAiB,UAACC,OAAD,EAAa;AAC1BrB,MAAAA,cAAc,CAACsB,WAAf,CAA2BD,OAA3B;AACH,KAFD;AAGH,GAhCqD,CAkCtD;;;AACA,WAAShB,gBAAT,GAA4B;AACxB;AACA,QAAME,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWT,cAAc,CAACU,gBAAf,CAAgC,UAAhC,CAAX,CAAjB;AACAH,IAAAA,QAAQ,CAACI,IAAT,CAAc,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACpB,UAAMU,MAAM,GAAGC,QAAQ,CAACZ,CAAC,CAACa,YAAF,CAAe,qBAAf,CAAD,CAAvB;AACA,UAAMC,MAAM,GAAGF,QAAQ,CAACX,CAAC,CAACY,YAAF,CAAe,qBAAf,CAAD,CAAvB;AACA,aAAOF,MAAM,GAAGG,MAAhB;AACH,KAJD,EAHwB,CASxB;;AACA1B,IAAAA,cAAc,CAACmB,SAAf,GAA2B,EAA3B;AACAZ,IAAAA,QAAQ,CAACa,OAAT,CAAiB,UAACC,OAAD,EAAa;AAC1BrB,MAAAA,cAAc,CAACsB,WAAf,CAA2BD,OAA3B;AACH,KAFD;AAGH;AACJ,CAlDD","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n    const sortSelect = document.getElementById(\"sort-select\");\r\n    const productSection = document.querySelector(\".product-section\");\r\n\r\n    // Add event listener to the sorting select element\r\n    sortSelect.addEventListener(\"change\", function () {\r\n        const selectedOption = sortSelect.value;\r\n\r\n        if (selectedOption === \"low-to-high\") {\r\n            sortProductsByPrice(true); // Ascending order\r\n        } else if (selectedOption === \"high-to-low\") {\r\n            sortProductsByPrice(false); // Descending order\r\n        } else if (selectedOption === \"default\") {\r\n            // Reset to default view (original order)\r\n            resetDefaultView();\r\n        }\r\n    });\r\n\r\n    // Function to sort products by price\r\n    function sortProductsByPrice(ascending) {\r\n        const products = Array.from(productSection.querySelectorAll(\".product\"));\r\n        products.sort((a, b) => {\r\n            const priceA = parseFloat(a.querySelector(\".price\").textContent.replace(\"$\", \"\"));\r\n            const priceB = parseFloat(b.querySelector(\".price\").textContent.replace(\"$\", \"\"));\r\n            return ascending ? priceA - priceB : priceB - priceA;\r\n        });\r\n\r\n        // Clear the product section and re-append the sorted products\r\n        productSection.innerHTML = \"\";\r\n        products.forEach((product) => {\r\n            productSection.appendChild(product);\r\n        });\r\n    }\r\n\r\n    // Function to reset to default view (original order)\r\n    function resetDefaultView() {\r\n        // You should have a data attribute that stores the original order index\r\n        const products = Array.from(productSection.querySelectorAll(\".product\"));\r\n        products.sort((a, b) => {\r\n            const indexA = parseInt(a.getAttribute(\"data-original-order\"));\r\n            const indexB = parseInt(b.getAttribute(\"data-original-order\"));\r\n            return indexA - indexB;\r\n        });\r\n\r\n        // Clear the product section and re-append the products in original order\r\n        productSection.innerHTML = \"\";\r\n        products.forEach((product) => {\r\n            productSection.appendChild(product);\r\n        });\r\n    }\r\n});"],"file":"sort.dev.js"}